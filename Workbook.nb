(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    174181,       3213]
NotebookOptionsPosition[    170569,       3157]
NotebookOutlinePosition[    171095,       3176]
CellTagsIndexPosition[    171052,       3173]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Jansen Linkage workbook", "Title",
 CellChangeTimes->{{3.847190542794364*^9, 
  3.8471905534180517`*^9}},ExpressionUUID->"25895f2a-272e-4284-be37-\
a903045f5591"],

Cell["\<\
Based on the research article \[OpenCurlyDoubleQuote] Walking Model of Jansen \
Mechanism\:2011Based Quadruped Robot and Application to Obstacle Avoidance\
\[CloseCurlyDoubleQuote]- R. Singh T.K. Bera\
\>", "Text",
 CellChangeTimes->{{3.8476327642754874`*^9, 
  3.847632803147107*^9}},ExpressionUUID->"678921f5-b1bf-465d-a2ad-\
cb3c7b5271be"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Q390584drEiU16cgECoCvG/RyzAtKngr87Oy7k2Zsl9FBYXGWE7u1vjxvrdu
MftL73aBOC8iL/Fyot90P4cGDrSvkVqbWmzPIZ7h28OzP2aL8srN2vB4vKio
qJiYmJrVvyASSVJS8g8ditbSYnpn7JYsCQ4P55blc/j7+2MJpqCgoKur27SA
Jk2azJw5k3YrjNCg+nTu3Bnr1fSBW7ZsqV27dlJSUnl8uBoDao0IRJ/g0zk4
NwAGMJOmocGpBbVmwIzX8Lrsk0HjNx8fH48uY+3atf369cNqgLa2du/evf/6
669bt24FBgaiu0R9QYEox3uYCYTGd/9Wiyi+74sXL7AymZ2dTdckCYTqw7tt
2w5ratJCc7Zz5/e7domLPCPifHH6h3QvfS92XTZLnsUECTg0cgjfEp4Xkifi
ls9j5e7ujtXC/v3716xMazyeiM3OmD7dj05rhkLTurXz9etJPzpwphBxcXGb
N29eUISjR4/SJQkjNH5+fl27dn3y5AlQ1Yk1a9ZgAYh14HL5dDWONEg7CSc7
Q2clUJLNwDkdpnuBVx7klbrLBp0F+pT79++PGjVKVVVVRUVFR0dn9OjRp06d
CgoKqtqbNjEx8bffftuxYwfaXjSzRGsI1YoQS8vTHTrsVVBArTlQu/atceOy
YmMLqwZWFoUSFJTQtaHO7Z3t6tr939rUYfuM84m/EM+L44mFZc0h4OLi0qhR
o3bt2tWg/gX8xDExvNmzA5o0caKFRl3dbuZM/+hoXql7Z0oIIzQcDmfgwIFj
xozBkjAlJWXo0KGDBg2ie+J+QfBuTYEUa7DWB301UGO0RhVUh8CQM3AmARJK
l+3Zzc3NyMgIRVxTU7NXr16LFy9++fJlRkYGbTSq1oaj0PTo0UNdXb1NmzYo
Nx4eHnhX/LKTGREqE2lo2fdaiTOio2+NHXuofn1jqqfGokeP8DdvJEXsudS6
CyX8RH7Sf0n+M/0dtB1sFW1pa8NWYTs2cQxZEZLtlS3MKlNUbY0TGvywAoEY
zUurVk4KClKVUVJi/fGHz7VriVTvTMU+44aGhvPmzQPKxVy5ckVXVxeLvrlz
52KB8/jx418k6uyroGfhAc8FXGbADG3QZsID0Ne0hbZH4WgERAhA8KOZalC7
XV1dhwwZsnbtWjaa2IwMHo9XTb7nnJycixcvjh07tlmzZlpaWr///ruZmZmd
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
jTZt2rQtAJfXrFlD71DlQpOTI7x+PbF7dzd5+c8xAG3w07EzyjIdAKGqwPs0
LCds+a3lKiNV5DTk5CbIyb2Xk8uVqyupOxpGP4EnyZBc1ddYgWRlZd24cSM2
NpZEoxFKx4YNG1q3bq2np+fq6lryfpZQK6snf//9OchZXf3q4MGZcXE/FBJQ
CHxrfhw//kx8wKwAh0YOjLVh1WJ59POI2BWRaZcpHWhTcIUZGRk2NjbvvuTt
27e+vr70DlUrNGKxxNMze8oUPzoPAGqNqipr7drQlBTSmF8j4fP51u+tR48e
rVpbtblBc21LbTnh51A0JVDqBb0OwIEwCKvoyaCxnMc7v5JL+/T09FOnTmlr
ax88eDAlJaUy35rw02BkZNS1a9cpU6ZERUWVXGjSQkIcjh3bp6Qk7aZRVDRr
3jzazk5U5khjYaYw/X263yQ/aXo0BVsm+NlByyFkZUhuQK4oV1TCQZ1VKzQ8
nvjOnU+tWn0eoamszGrd2vnRo2Qul1QIaxjSTEoiEd45O3bs0NTQbNy08dzD
c8dkjdGQaDChaPhqDa3PwbkESOABrzQ5lUoAXoaVlRVeRiUHIUdERAwZMkRB
QaF///4sFqu6pW4j1Ajy8vLu3btnamqanZ1dcqERi0RRNjYnW7SgY88OqKk5
HDlSytYzGaSTdeZLg58jtkW4dnRl1/3cjGYrb8uuzfad6JvyOEXajJb/fet0
7NgxFBo7Ozv6T2tr6wYNGlSO0KCdCQrKnT8/UEmJnkOT1bSp0549UdHRvJo+
su8XRCwWR0dHnz17tk2bNu3atVuxYkVUXJSL0GWtZG0raCU7QWcbaGMMxnZg
x4XyH1YvFAr/+++/ixcv5uTkVPJdxOVyX7161blzZ01NzenTp/v4+JC8AYRS
gBUkvHt/NIsvPXKTTrApHbk5axYvI6MsrWefoWa0QTVJvJQYMDPAoaEDM4Ea
W5Xt1sMtem90plOm1NoU+7h5enqeP38+ISGB/jM2NpZ+SMt6eSUgO1t45UpC
kyaOdAyAigp77Fh8OnPyym+CUULlgPcYh8M5evTowIEDsd6ydOlSLy+vfEF+
viSfA5yjcLQzdFYGZUZrGkGj6TDdBmxyoDzvNLyMZ8+erV27NjMzsxxPW/J3
xy/h8uXLXbt2Ra1Zv369k5MTiegmVA7Z8fFvt27dIy+/l0qwea5HD054ePEJ
NkuOdDrafHFeaF7g7ECpr5H//ywDtqq2fpP9pNFo+T+QG63SQPWLjOQW2Bmp
0DRqZH/kSExOjpC4mRoH1r5sbW0HDBigqKjYq1evp0+f0tOWSXOdgSQTMo/D
8abQVLYNTQmUJsEkV3ClU6KVy2Xk5eWh0llaWpbL2UqBtAuVz1+0aJGampqK
ioqpqSkZo0qoHPJzc71u3NivqkqHBBzT1Q148kRQsrxnJUHajCYQcyO50fuj
Xdq62CrZ/j9CQIXlOcQz+WEyP77aZdPNyBBaWqY1bepEhwEoKrL09b1CQvJI
wpmaSFZW1ubNm9XV1TU0NHbs2JGens5sksZLgvgTfDIH82bQjPE19ASdU2Hq
PbhX6pmgZeHxeBs2bOjQoUN8fHzZz1ZqRCIRi8VCUyMnJ/f7778zjdIEQoWC
5iXC2vpUmzb/UHnPDmpo2O7dy83IKN8GZDFPnOOdk3AxwecPH9QX2tqg1thr
2nuN8IraG8UN4Urz1VQPa4Ofnc3O2LAhjBo7I+2gqVeP/c8/URzOd2YvJVQ3
6DB+V1dXaaSZqurgwYOtrKyKthflQ34QBJmBWX/oXwtqMVqjC7p/wB8v4WUe
5JXR18TExHTp0uWPP/5g2s2ioqLQW927d+/+/ft4hVwu18HBAZdfvXolK4Xf
QigUstls+vAXL14kJibSn9fNze3hw4e4hsPhfPULwT1XrlyJ5q5BgwZnzpxB
FS7L5yIQSkhqcPD9adP2KirS3TR3Jk7MjI0t3cjNYpCm4swWStM+LwqSRj4r
FvgaRZajrmPwouAMmwxBiqDUk3WWI9nZAmPjyLZtXWiVUVOz69PH3ccnRyAg
dqaGgfdSXl7e/v37Gzdu3Ldv32PHjn1rpmMRiDjAuQN3hsGw2lCbaUZD3RkK
Q6/BtXRIR2tTarl5/Pgxlu3r169nwr1SU1PPnz+vpaWlrKyM0oDrLS0tO3Xq
dPfu3ZIk9xCLxR8+fEDxwtOamJjQnws/r6Oj48CBAx89evStrkw0NS4uLs2a
NUNTM3HiRE9PT7ohsXSfi0AoIVwOh2ViQree7ZWXP9u9e9ibN9yKmXkcdSQ3
KDfmWIxHXw+7uv9PxclWY3sO9YzYEZEXmlflvsbePsPAwEtR8fMcmr17u5ub
x/F4JZ37gFB9wCIUq/16enpNmjQ5efJkWFhY8dEyWZD1Ht5PhImNoJHsBJ1d
oesxOBYLsaUbYoN3zvbt27FgP3XqlOxdhOJiZmZWr169efPmocEZN24cCoTs
FaLNCQkJKcZ03Lx5U0lJCfWLz//c/oyWbfXq1cxJ0NeEhoYWCmbGlSi7eD3a
2tpHjx7Fr4UM4SQUg0AgOHfuHJrlspxELBQGPXt2snVrqdDIyR3V1X27ZQsn
PLy8LrIQEpEkPyU/yykrfFO4g44DM3saS1k60MZ3im/ayzRRFUV2YSGQmpq/
cWNY/fr2dEgz2pk1a0ITEvgVNLsZ/oI/GihIKDlYfu7du1dDQ8PQ0NDf3x+/
7e/WFnjA8wRPlJWO0JHRGkVQbAWtZsAMd3AvxQSdWM7PmTMHC/br168X2oQC
sWHDBk1NTVSZGzduyCb9i46ORsl48uTJ4sWL0Xd89cxJSUmdO3du27YtigW9
ZuvWrXgIvWxjY4Mnv3//Pp7n06dPzFGoXMOHD5eXl0czNWjQIAsLCxJ+RvgW
+BClpKQsWbIE6zN4T5blVHEuLteGDjWmhOaAuvrNMWMSP34shyDnbyDNV8MT
ZbAzgpcFO7V0ovPV0C8HbYegv4M4bzn5yfmV7yBQTdzcskaM8FJQ+GxnOnRw
uXo1UfC9+Q5+FCx5wsPD79y5s2LFitIlo6ZHICYnJ1taWjLh37JgYeLi4oL1
ECx2cLcqtGN4AZcuXUpNTa2KH1SMHgEL27t375ZwdgkJSLjA9QXf9bC+GTT7
/8wCoKQDOkZghDIkgB8rltGYTJ48GYXm33//Lfx2Eomfn187CtmnGH9cvGxT
U1NcuH37Nlqerzb6oU5duHChTp06Fy9epNKMZ8yePZsWHfzRJ02ahAYHxWvN
mjWHDx9mqjTZ2dmoawoKCioqKjo6Oihk8fHxxLATvgrevY6OjmPHjm3WrJmt
rW1ZTpUZF/d63bp9ysp0ioBjurp+9+4JKn48FzeCG3cizm+yn52mTDOaKttT
3zNqb5R0YmiqhK+cR0AkkiQm8o8cidHWdqB7Z+rWZS9eHBQdXf7fAxYC9+7d
69evH/52ISEhpThDRETE1atX9fX1Gzdu7OTkVGgrh8NBCRs6dCgW8tu2bRsz
Zoyzs3NVlSSjR4/W1dX19fWtwqIMC9sfah1CuQmF0D2wZwAMYIZz4ksLtBbA
AgdwyIbskvfX8Hi8KVOmoNCgZyn8RtTwlhEjRtStW1d28uXExMTWrVvTsdD4
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
i2J7wzglFkrb+rc7r4r3XgOwsMXAwMDWa127RUpKBEVRURG7ELmCjUgJ0ijd
3Z0LCwvzf4fRvSiSkt7ze3h4lmV3dmZ25rznPec730evkUlIoAOYW+blRiA0
EjAOQkJC1tbWzJ9paWmSkpJwN1SZUowePXrTpk1cXYAWwARBSm7cuAEJMDY2
7tu3L7wMd2svX77kCk1ubu6kSZO2bdt2/fp1vAu/5eXl27dvD2mrdsrP3t4e
1klCQqImE5RZMTH/rFun07kzIzQXhw4Nfv68JdZBA3msvKPXjvZX7M/EnonM
EdG8p5lf0PLi6H4Nioqo+Hh6Uf/Vq9+klIHiXL9Op2X+WsiFQCBUxXdCg4a9
S5cujNBER0fD3ezdu7f82KmzszMvLy+eZLFYq1atghLFlbvZygcDJCcn9+jR
4/Dhw+ZfwfOWlpYfP36s1qdAifbs2dO2bVsfH59qDyE/Pd3z+nXDIUOY4s6n
27d30tUtaJkTi5wSjpm92eITi3mn0HnPBKcJzj82PzEtkWRkakyYSf/cXHpG
5vFjOqt/+ehlfX16DC08vLnkxiQQmj9VCE1AQAAfHx8sSfmRrrCwMEFBwZ07
d2ZnZ0+bNm3kyJGxsbHc/5YXGgiQuLi4gYHBd59Yw7Uhnp6e0KmaLKQqLixM
Dw+/M2uWqoAAtEaZh8ds5cqU2oRJNx8gKKFxoZp3NFtPa80jQ8c5D1o1yMbL
hl1Ewj4bj4IC2si8e0cnkClfEFNTkzYyLi7Ut7nBCARCNVQhNKmpqZKSklOm
TClfg97f319AQODy5ct5eXmLFi3q3LlzedNRXmjS09MHDRo0Y8aM8m/Pz89/
9uxZtQVVoUSmpqYzZ86sSelVerKpsPDdsWNaoqKM0BiNGBFsZdUSR8+Y4s7P
Pjzrt7IfExIgOU/y9J3TeSxSGbAxKC6mV8E4O1P37n1jZFRV6TAAW1t0tOi6
zMTIEAi1ogqhQaPHJPp+8OAB9/WOjo7CwsKurq6QgGPHjrVq1erq1avMnAte
/+rVK+4cDYvFmj9/Pjaura0NrYEtwjNubm5aWlrfyQeziBgWiTtAFB8fP2fO
nIqFMCqDU1TkfeuWXq9ezDSNjoSE5/Xr7BZbttUt0E3mbxmmakD7Ge3Xaq5N
yUypOkkC4efBVZyWRn38SCdbLm9k1NToamU2NsTIEAh1ZOnSpe3bt3/x4gXz
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
4Nw52t0EB5NJfwKBUD1oUdGu+vv7W1pabtmy5YflABqQoCDq6tUvQrN0KZ2s
pJZCU/qV8o/z84Pj4q54eIy3t+/A1RpbW14HB6HAQCUm+XMVZdTqBWhWVm7W
MpVlgtMF6dGzSTwz98/86P+xQT+0vmBCyzIyaJW5do22MFyVwWM9PXpuLSGh
7qXKCATCfwS0hBkZGbAD9+7dmzlzZpcuXTp06FA+11ljgNbK3JySkaGFZu5c
as8eOmjpZxsv+Jqi4uKsjIx3AQGrnJy62dkJvn/PyA2vvb2Qt7d0XJxRTo4n
h1NVeeifpMxelZy+e7rzos7M6Fm/lf1uvr5ZVPx9jp1mSF4e7VbMzGjnwl0j
A4nR1aX7BS4u9IInDoeoDIFAqBQOh5OdnQ1N0dfXl5OTY1ZcSkpKDh8+vGJ9
tIYlM5OOB5g+/UtygM2b66tOSVk7z87PD42O1ixL/ixWLvlzqw8fxH185qem
WrHZKVXP2vwk1h7WYzaO4ZWmR8/azGxz8PLBqMSoZptuizEyWVn01Bk3axmj
MmpqdLDZu3dUdDQdfkYkhkAg/BBmKj82NtbNze3cuXO//fZb6zL69++/dOnS
s2fPBgYG1k8sWW32iY5Ykpen19FMnUopKNB1f+szRraUw8lnscIjI1Xd3UeV
j3+Gu/n4sU9kpFpOjhebnVpS0iByk5yRvFJ9pfgCccbUzDow64HNg2JOc6wa
gLOelkb5+lKPH9MVMLmT/pAYAwN6mgZ9EOJiCARC1UBo8vLy9PT0pKSk2rRp
IygoKCwsPHDgwMuXL2dlZbHZbPS0m2BUB0KzZMkXocEDNGdVih0zJFXzzZdN
2pQUFaUlJ9/38Znr6CjKaA0za+PoKOznp5ic/KCoKKMhrA27iK1+W330xtE8
k2mhGbR60L7L+wqLCpvV6BlOJxQERub9ezprGZSFu9gfWgMj4+hIh5YRlSEQ
CNXCNNH79u3r2LGjqKjo2LFjtbW1XV1dmRJpTbZbAQHU+vVfkgPMnUt9/Fh1
PACLxUpJSUlOTq5VWw0zV1SUmpv7KSLihItLb3v7Nl9rDfDD5ri5jYqO1s3P
D2YC0upRBWBerJytVqiu4Jn0JUXArIOzEtISOA1joOoAvvmcHLpa2ZMn9Cw/
V2VUVem1/zdv0oGBubkkgJlAINSCAwcODB06VFdX18/PLy0trbHHyioSGkrt
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
2rRpo6ioyM1/W15o0tLSRo4c+V2WAGwzNjaWSVCDdwUGBh44cKBbt26CgoKw
xixW9SaaQCDUAzAvNjZ0cgCozJQp1KZNdHKABhOa7MLsqx5Xe+r1ZOxMN91u
hi6Geex6KAmUn5+/ZcuW3377bdeuXVu3bpWSkuK2Zr82aKJ1dXVrIjQqZeFn
ZmZmTbi3VQvNiRMnOnTo8PDhQ+7rIyMjIR+rV6/G95ubm9u7d2+8GCaO+W95
oYGaHD58GJYHsst1K3jBnj17kpKSoqKi4uPjqbLAHvhf9En69euHJxv9BBAI
/0kgNG5udLEAxtGsXk05OjaQ0BQWF3omeM68PZP/FJ3WDKZmycMloemh1cYA
1JCcnBwbGxtjY+Pbt2+j7/pfUBmqbOjM0NCwho5GS0sLzWwT7i38lISEhL6+
PvPtsNlsdA+GDx+ONr+0tBS2FI5m7ty5zMJnZn5fXFzc2tqaefvevXvbtWuH
A4EZwQvwLQ8YMKBTp07BwcF4Mf7EYxERkYMHD75+/fr9+/e7d+/G9VBcXPzi
xQtG3Zhkg8uXLx82bBhXsAgEQsMCoQkIoEfMGKFRUKCLBTRMmoL47Pi7n+92
0u0EleFT4RPTErvoejG3sLGTZv9iJCcn37x5s4ZCg8a2qYIB0MKjJ6CsrCwg
IDBjxgw08lATDw+P8ePHw+O8evWKiUMzMDDo2LHjjh074GVcXV0nTJjw//bO
BJyq7X/jyRQKDZo0/xKleR7vLTRppFlRKjTnalIJGYqEigpJk6E5U1JuiAZJ
UiGzEFIoUxJ1/u85q/b/XOeQuroq6/N4zrPtYe211977+65377XXMjQ0ZBxK
amoqDI6AgICSkpK7u/vChQtlZWWbNGkyf/78e/fuYQWYO1FR0SZfUFZWJsN/
+Pj4tGzZ8siRI1lZWREREVAZ5KShhqCiUBodEJrUVHYbACI0s2ej0vkjhKay
qtInwWfxpcUCu9gfzkjukRx5bGRqYWrlx4brGOG3oKSkJDQ0tC7Nm83MzDw8
PP6L4Sf4AaF59OiRo6Ojra0tHA2sTVJS0vHjxzGNOSdOnCAZgxjBkKqqqk6Z
MgVmJyAgAAfINA+DJYFQamhowARBXGBgMb158+bo6GjyIgabI82xY8f269cP
9iclJYVse/fu3a1bt2pqak6fPn3evHlnz57FmrTVGYXyH4F7DTf4rl3sJmfk
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
hJmZmba29tGjR5mbAhEpMzPTwcFh3bp1urq6+/fvJ+1YcJEHBgb27t1bSkrK
0tLSy8sL8xmhyc7OxtLVq1dv3bo1JSWFd79INiMjY/Hixc2aNVu5cqWnp+fd
u3chT7dv3969e3d0dDQSxPwzZ85UVFRgZdxuW7ZsQQaQjeDgYO7+BrOyso4c
OWJgYLBmzRr4I+7WOJiGVcGGOCjIWV7e/7+mRLxFLXHPnj1r167FIqSAm712
oUFSf//996pVq5Cxc+fOkXe76enpF79w//590o4ItVM/Pz/MwYFUe2qBwIJy
trGxQVIoscOHD69YscLFxYX74wgUI+qiKFUUIGrC169fr/bpREFBATZBzlG8
p0+f5hYa/CLcoRw2b96so6OD1ZijRjGGhoaioLChnZ0dNuTbconyraSmprZt
23bIkCGM0OC6hWHB9cDiXD+4ZlCNcXJyYmoXbm5uWP/ly5eYg2mIDs41OVPv
3r2DXuB6g5qwOC0H+vfvLykpuW3bNtwdiYmJULF58+ZhoprQIClyMTDPopGU
pqYm7kfuptT/ACkEBrIbno0d+7k9gI/PV9sD5JflGwcbs5s0G7M/nBGzEDMJ
MSn78Mu0/6H8xyBcQ1+WLFkiLCyMCxLB6vjx47gpWrdujQoYAjjWiYiIkJOT
wzrPnj0LCAiAx0cFDIEOVzX+nTZtGm4BhEQoBYSDCA3uCwRwW1tbyBOUaOTI
kcnJydV2jbsPt4OpqWmrVq0Qad3d3YOCgiAuqBYiwb/++gvaN2nSpGXLluXk
5OBfeXl5qEB8fDxiPm4lphsoBG01NTXcetgFbljkfM6cORAs8ox6w4YNUBAo
HXSqX79+06dPJ/cy4jaOFGliE9ywEBr4subNm9ciNE2bNl20aJG1tfWpU6cW
LlyIuIEbHwWI+ipCt4SExLBhw2JjY0kkQQBHnlGSEFxuJ/X+/XsUGjbH+lAr
ExMTZ2dnfX19aWlpIyMjEg0gTDicmTNnQk+fP3+OMkQ+cWqIriE1+EfUWrE+
co5q7YwZMyDWjNBgJuZAX5KSko4dO4aaNs4XyhCLQkJCMB0ZGQlxRIVBSUmJ
CYyU7wbnC/dIy5YtcZqgOOSbTVQkoBRXrlzBGcd5gX/BRdu9e3dc86hpPH78
GGcQZ6eK4x1ev36toKBAalw4fajDIClsjqoCTiISPHDgAJbiCoSc9ezZs1u3
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
DSAQsJCZmZnMt7G8qKurk6dtAgIC+BUREYF8S0lJtWvXrnPnzr169Ro4cOCY
MWMmT54Mv/NfHgKFQqE0LB8/foTWFBQUsDh9YKIaD0djZ2fH+2oGQIOCgoJ+
hgFDf0J8fHzMzc23bt0K46OiotK3b99OnTpJSEgICQmRvt0gQ5AeSUnJ8PDw
mhL58OFDUlJSUVHRz//+i0KhUAjkBfejR4+gEfAjX+2YBYEuOzsb68PaODs7
Q3H2799va2uL6UuXLt2/f5+7C1AKNyhYGL3Xr18/e/bs9u3bvr6+Hh4ecIso
wB07dujq6k6fPn3IkCHdu3e/c+dOTYlgcw0NDR0dnU2bNhkZGdnb23t5ed28
eTM6OjojI6O0tLSSA2lv8F8eHYVCoVSD6ewFgevYsWMIca1btxYVFd25c2dd
WkQjiMHjpKSkxMbGPnny5OnTp+SD+po+w6HUAnQBHvD58+dRUVHXr18/f/48
33bmhMzMTJgg4oBERERkZGQUFBRGjx49efLkRYsW6evrW1hYHDp06OzZs/T5
G4VCaVggMYWFhZ6enqhId+3atWnTphCa4cOHr1+/vqiIjsL884Kztnbt2qlT
pw4cOLBDhw5iYmJNvkD6/5GSkmrfvr2cnBwUp6EzS6FQGi/EyKDmPHPmTAQr
ISGh7t27a2lp2dvbBwUFUVfyM1NeXh4SEnL69GkrKysDA4Ply5dPmzZt7Nix
gwcP7tGjB2oLzZo1ExQUhO6sWbOmpkRu3bqFs+/v73/z5s3IyMiEhAQYJdLB
0W/WUJBCoTQUHz9+vHjxory8PCKStLQ0qsdHjx7NysqiHxL+/DBdW5MvTD98
+ACNuH//fmBgoLOz865du1avXr148eIpU6ag2lBTImpqarBCsrKyioqKysrK
qGPo6+tDuVxdXYkAhYWFPX36NCMjIz8/n++3qxQKhVI7CFOXL18eMWIEasKb
N29GSKEvjn8n4HrS0tK4G1rj/L59+xZz4uLi7ty5A6FBBUNYWJgZzJRBXFyc
DKuHdeCJoFwuLi5nz54NCAiAD4qJiUlJScnOzi4qKqr7gN0UCqURgloxKsOI
G4g5hYWF1MX8ZhDXw31O8e/Lly/j4+NhVaAaJ06csLa23rhx4/Lly2fPnj1+
/HjUOv73v/+1bNkSTgc+l3zpw/SuIyUl1bNnT6iPqqqqpqYmBMjY2Bj2Jzw8
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
UCgUCoVCoVAoFAqFQqFQKBQK5V/yf6mtLC0=
    "], {{0, 512.}, {547., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{366., Automatic},
  ImageSizeRaw->{547., 512.},
  PlotRange->{{0, 547.}, {0, 512.}}]], "Output",ExpressionUUID->"e6c3b4b3-\
3ec1-4f41-b137-ab9716354ff1"],

Cell["\<\
The Jansen Linkage is composed by 11 links, the first one l0, represents the \
distance between the crank shaft and the fixed pivot.  
The crank radius is taken as a constant -> r \
\>", "Text",
 CellChangeTimes->{{3.847190641640053*^9, 
  3.8471907953903356`*^9}},ExpressionUUID->"f125b167-23ee-4f43-9142-\
de17c9c6baa3"],

Cell["L={l0,l1,l2,l3,l4,l5,l6,l7,l8,l9,l10};", "Text",
 CellChangeTimes->{
  3.84770757908265*^9},ExpressionUUID->"1e297c4f-ee81-4fdc-b125-81cf4c8ca118"],

Cell["\<\
The fixed pin coordinates x10, y10 (inclined by angle \[Gamma] to the \
horizontal)are given by :\
\>", "Text",
 CellChangeTimes->{{3.8471906358077173`*^9, 3.847190637763959*^9}, {
  3.8471908064607973`*^9, 3.8471908271987195`*^9}, {3.847190893223119*^9, 
  3.8471909212022686`*^9}, {3.8474690625160427`*^9, 
  3.8474690822780104`*^9}},ExpressionUUID->"ecc56666-2962-4976-b092-\
e8fc6ec205aa"],

Cell["\<\
x10=x0+(l0*Sin[\[Gamma]]);
y10=x0+(l0*Cos[\[Gamma]]);\
\>", "Text",
 CellChangeTimes->{
  3.847707565785287*^9},ExpressionUUID->"35d4c75b-3a11-463d-8ae5-\
14d465137c9d"],

Cell["\<\
The position of the various nodes of the linkage can be represented as a \
vector of points:\
\>", "Text",
 CellChangeTimes->{{3.847190932415168*^9, 
  3.8471909586867228`*^9}},ExpressionUUID->"be0e5748-61b9-40b0-9e45-\
14bfd022b4eb"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"Nl", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "y0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "y1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x2", ",", "y2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x3", ",", "y3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x4", ",", "y4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x5", ",", "y5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x6", ",", "y6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x7", ",", "y7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x8", ",", "y8"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8471909608890004`*^9, 3.8471910221314726`*^9}, 
   3.847469148030729*^9},ExpressionUUID->"24247769-a435-4416-9574-\
2ac546103913"]], "Text",
 CellChangeTimes->{
  3.847707590287383*^9},ExpressionUUID->"cee0bc20-0606-4a99-b0aa-\
cd9e392325b8"],

Cell["Eq of the Node 1 are:", "Text",
 CellChangeTimes->{{3.84719104638739*^9, 3.8471910805125504`*^9}, {
  3.847469178637659*^9, 
  3.8474691787471275`*^9}},ExpressionUUID->"4ecf19ef-a3cf-4432-ae9b-\
c4beebf8e79d"],

Cell["\<\
x1=x0+r*Sin[\[Theta]];
y1=y0+r*Cos[\[Theta]];\
\>", "Text",
 CellChangeTimes->{
  3.8477075361387806`*^9},ExpressionUUID->"11cf7a4b-452b-447b-aaef-\
690d425c4a32"],

Cell["\<\
The position of Node 2 is determined by the intersection of the arcs made by \
the Link 1 around x0, y0 and the arc of Link 10 around point x10  y10\
\>", "Text",
 CellChangeTimes->{{3.8471913991237507`*^9, 3.8471914475755167`*^9}, 
   3.847456558698596*^9, {3.8474692090733347`*^9, 3.8474692267824955`*^9}, {
   3.847469285918769*^9, 
   3.847469304197658*^9}},ExpressionUUID->"9c1046f0-fdf8-4a74-a677-\
91b063e84f90"],

Cell["\<\
The trajectory of any nodes can be determined in the reference frame using \
circle intersecting methods\
\>", "Text",
 CellChangeTimes->{{3.8474693249462843`*^9, 
  3.847469327904109*^9}},ExpressionUUID->"abd7dd1e-f26f-4a6d-9076-\
20399faa08fb"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"eq1", ",", "eq2"}], "]"}]], "Input",
 CellChangeTimes->{{3.84770824333329*^9, 3.8477082481135116`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f1c4550a-1474-4196-abb3-396c37aa7b66"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"FindPoint", "[", 
    RowBox[{
     RowBox[{"p1", ":", 
      RowBox[{"{", 
       RowBox[{"x1_", ",", "y1_"}], "}"}]}], ",", 
     RowBox[{"p2", ":", 
      RowBox[{"{", 
       RowBox[{"x2_", ",", "y2_"}], "}"}]}], ",", "r1_", ",", "r2_", ",", 
     "side_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "d", ",", "\[Theta]", ",", "\[Alpha]", ",", "xp1", ",", "yp1", ",", 
       "xp2", ",", "yp2", ",", "sol1", ",", "sol2", ",", "s1", ",", "s2", ",",
        "sr"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eq1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "-", "y1"}], ")"}], "^", "2"}]}], "==", 
        RowBox[{"r1", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eq2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "x2"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "-", "y2"}], ")"}], "^", "2"}]}], "==", 
        RowBox[{"r2", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eq1", ",", "eq2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
        "\[Theta]"}], "=", 
       RowBox[{"ArcTan", "[", 
        FractionBox[
         RowBox[{"y2", "-", "y1"}], 
         RowBox[{"x2", "-", "x1"}]], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x2", "-", "x1"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y2", "-", "y1"}], ")"}], "^", "2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"d", "^", "2"}], "+", 
          RowBox[{"r1", "^", "2"}], "-", 
          RowBox[{"r2", "^", "2"}]}], 
         RowBox[{"2", " ", "d", " ", "r1"}]], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xp1", "=", 
       RowBox[{"x1", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yp1", "=", 
       RowBox[{"x1", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sol1", "=", 
       RowBox[{"{", 
        RowBox[{"xp1", ",", "yp1"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xp2", "=", 
       RowBox[{"x1", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "-", "\[Alpha]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yp2", "=", 
       RowBox[{"x1", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "-", "\[Alpha]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sol2", "=", 
       RowBox[{"{", 
        RowBox[{"xp2", ",", "yp2"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s1", "=", 
       RowBox[{"Sign", "[", 
        RowBox[{"Last", "[", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p2", "-", "p1"}], ")"}], ",", "0"}], "]"}], ",", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sol1", "-", "p1"}], ")"}], ",", "0"}], "]"}]}], "]"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s2", "=", 
       RowBox[{"Sign", "[", 
        RowBox[{"Last", "[", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p2", "-", "p1"}], ")"}], ",", "0"}], "]"}], ",", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sol2", "-", "p1"}], ")"}], ",", "0"}], "]"}]}], "]"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"side", "===", "Left"}], ",", "1", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"sr", ",", "s1", ",", "sol1", ",", "s2", ",", "sol2"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8474666922974405`*^9, 3.8474667097569623`*^9}, 
   3.847466780403708*^9, {3.8474668115604973`*^9, 3.8474668168748283`*^9}, {
   3.8474673014612894`*^9, 3.8474673129185677`*^9}, {3.8474673430201387`*^9, 
   3.847467381527953*^9}, {3.8474674136342893`*^9, 3.8474675688152256`*^9}, {
   3.847467603412295*^9, 3.8474676606218696`*^9}, {3.8474676935290456`*^9, 
   3.847467711679537*^9}, {3.8474678857782006`*^9, 3.8474679026376266`*^9}, {
   3.8474679982315187`*^9, 3.8474680511221595`*^9}, 3.8474681859709415`*^9, 
   3.8474683405151587`*^9, {3.847468403017826*^9, 3.8474684579825935`*^9}, 
   3.84746943383206*^9, {3.847473391107669*^9, 3.8474733919045563`*^9}, 
   3.8474742036756816`*^9, {3.8476430679378605`*^9, 3.847643084177432*^9}, {
   3.8477076372852745`*^9, 3.847707676822723*^9}, {3.847707798861952*^9, 
   3.8477078393796797`*^9}, {3.8477078876490536`*^9, 3.84770788926441*^9}, 
   3.8477084670984354`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"13efd683-3245-44f9-8ba2-764bc2c303f1"],

Cell["\<\
Where (xp1, yp1) and (xp2, yp2) are the intersection points and 1 is the \
distance between two circle center points.\
\>", "Text",
 CellChangeTimes->{{3.847467716024485*^9, 3.8474677423633084`*^9}, {
  3.8474687334563785`*^9, 
  3.847468737292117*^9}},ExpressionUUID->"bcc75ed5-a805-4ef1-8c09-\
bca64cc8196b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindPoint", "[", 
   RowBox[{
    RowBox[{"p1", ":", 
     RowBox[{"{", 
      RowBox[{"x1_", ",", "y1_"}], "}"}]}], ",", 
    RowBox[{"p2", ":", 
     RowBox[{"{", 
      RowBox[{"x2_", ",", "y2_"}], "}"}]}], ",", "r1_", ",", "r2_", ",", 
    "side_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "d", ",", "x", ",", "y", ",", "vc1", ",", "vc2", ",", "p", ",", "sol", 
      ",", "sol1", ",", "sol2", ",", "s1", ",", "s2", ",", "sr"}], "}"}], ",", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"N", "@", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x2", "-", "x1"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y2", "-", "y1"}], ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", "^", "2"}], "+", 
         RowBox[{"r1", "^", "2"}], "-", 
         RowBox[{"r2", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "d"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r1", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vc1", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x2", "-", "x1"}], ",", 
         RowBox[{"y2", "-", "y1"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vc2", "=", 
      RowBox[{"Cross", "[", "vc1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], "+", 
       RowBox[{"x", " ", "vc1"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sol1", ",", "sol2"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "+", 
         RowBox[{"y", " ", "vc2"}]}], ",", 
        RowBox[{"p", "-", 
         RowBox[{"y", " ", "vc2"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{"Sign", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p2", "-", "p1"}], ")"}], ",", "0"}], "]"}], ",", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"sol1", "-", "p1"}], ")"}], ",", "0"}], "]"}]}], "]"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"Sign", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p2", "-", "p1"}], ")"}], ",", "0"}], "]"}], ",", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"sol2", "-", "p1"}], ")"}], ",", "0"}], "]"}]}], "]"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sr", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"side", "===", "Left"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"sr", ",", "s1", ",", "sol1", ",", "s2", ",", "sol2"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8474667234438353`*^9, 3.8474667313409095`*^9}, 
   3.8474717768520055`*^9, {3.8476400965681863`*^9, 3.847640112858808*^9}, {
   3.847640292921048*^9, 3.8476402932010417`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"016c874d-c9a9-4857-8171-04bdef394c4c"],

Cell["The following function creates link between each point", "Text",
 CellChangeTimes->{{3.8474696235256996`*^9, 3.8474696571610327`*^9}, {
  3.847632668146578*^9, 
  3.8476326711263933`*^9}},ExpressionUUID->"e2f5907d-49d8-4931-b065-\
134c63423e89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindLines", "[", 
   RowBox[{
   "\[Theta]_", ",", "r_", ",", "l0_", ",", "l1_", ",", "l2_", ",", "l3_", 
    ",", "l4_", ",", "l5_", ",", "l6_", ",", "l7_", ",", "l8_", ",", "l9_", 
    ",", "l10_", ",", "l11_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p8", 
      ",", "p10"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p8",
         ",", "p10"}], "}"}], "=", 
      RowBox[{"FindPoints", "[", 
       RowBox[{
       "\[Theta]", ",", "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", ",", 
        "l4", ",", "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", ",", 
        "l10", ",", "l11"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p0", ",", "p1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p2", ",", "p10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p0", ",", "p10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p10", ",", "p3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p2", ",", "p4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p10", ",", "p4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p4", ",", "p5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p3", ",", "p5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p3", ",", "p8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p8", ",", "p5"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8474694424211416`*^9, 3.8474694424369073`*^9}, {
  3.8474695322912483`*^9, 3.8474695378554935`*^9}, {3.8474695813684397`*^9, 
  3.8474695874331026`*^9}, {3.8474696980043097`*^9, 3.8474698292458973`*^9}, {
  3.8474700906218824`*^9, 3.8474701284056473`*^9}, {3.847470169186412*^9, 
  3.84747018624509*^9}, {3.84747037228825*^9, 3.847470378467012*^9}, {
  3.84747061276926*^9, 3.847470617692271*^9}, {3.847471122403916*^9, 
  3.847471132881362*^9}, {3.8474743344663277`*^9, 3.8474743457738733`*^9}, {
  3.8474743899158106`*^9, 3.8474745589242673`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"24b7c146-444b-481c-a988-0565f7059ee6"],

Cell["\<\
The following function find the nodes depending on the length of the links\
\>", "Text",
 CellChangeTimes->{{3.8476326753876195`*^9, 
  3.847632713874906*^9}},ExpressionUUID->"591480ff-8ae0-44e4-9054-\
4d9f24d66ecd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindPoints", "[", 
   RowBox[{
   "\[Theta]_", ",", "r_", ",", "l0_", ",", "l1_", ",", "l2_", ",", "l3_", 
    ",", "l4_", ",", "l5_", ",", "l6_", ",", "l7_", ",", "l8_", ",", "l9_", 
    ",", "l10_", ",", "l11_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p8", 
      ",", "p10"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p0", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p10", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "l0"}], ",", 
        RowBox[{"-", "l1"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"FindPoint", "[", 
       RowBox[{"p1", ",", "p10", ",", "l2", ",", "l10", ",", "Right"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p3", "=", 
      RowBox[{"FindPoint", "[", 
       RowBox[{"p1", ",", "p10", ",", "l3", ",", "l6", ",", "Left"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p4", "=", 
      RowBox[{"FindPoint", "[", 
       RowBox[{"p2", ",", "p10", ",", "l4", ",", "l11", ",", "Right"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p5", "=", 
      RowBox[{"FindPoint", "[", 
       RowBox[{"p4", ",", "p3", ",", "l5", ",", "l9", ",", "Right"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p8", "=", 
      RowBox[{"FindPoint", "[", 
       RowBox[{"p3", ",", "p5", ",", "l8", ",", "l7", ",", "Left"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p8", 
       ",", "p10"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQbeW/LrN81RvHkBDhLBB9r3JzH4h2Oxk4GUTLyAXM
BdEaSzrB9LUPeotAdIV2x2IQzSpxfBWIPpNycw2INrJ6cBBEl1jpHgHRJz9t
fACifzQ+ewiie/K2PAPRmgl7GCuA9DmWvaIgWtLFVQZEz2S9tABEhxy4sgJE
b1jBthVE75k9YReI/sWfux9EM0nyHQDzLxocBdEyt66fBtGHnHwegujZvu/B
9DapuTyVQLop/o4QiH611l8FRF/ZlA+mtyz4kQyiFRT4U0B0fpJxBogufn8h
B0QzZa4sANGWGcfAdFpVaRWINvpdC6anff5yBUSvWBp3HUSHJid6p6x546iz
sMwHRAMArinAVQ==
  "],
 CellLabel->"In[5]:=",ExpressionUUID->"e6e8e644-a412-4cd2-bfb9-e7d3bff9093c"],

Cell["\<\
This is Jansen\[CloseCurlyQuote]s Linkage with the parameters that represent \
the lenghts of the links:\
\>", "Text",
 CellChangeTimes->{{3.8474713574645343`*^9, 3.8474713643006873`*^9}, {
  3.84848062250521*^9, 
  3.848480695101302*^9}},ExpressionUUID->"b42c0631-43b1-4d2c-b832-\
6318ceabb122"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T+oJWmZx/E7uoqBgoGIioFGDsJAIxO0J3INxA2UwXVRWARHdo4jDdro
ws4iMokw4ZxEOhQ0mLCzOxiZKB2ORoNcFs0MDQ1r+3du/+59b3XVOW/9eave
963vB47jzD23+9x7Tj311vM+9Tyf/8FPvrX/wMXFxc8+8vR/vvXq//zrT3/6
6v/++8ef/st//PhnP/rhj1/7r3/78X+/9sPXfnr/Bx98+h//74WLi/98+viX
p/+/AQAAAAAAAAAAAAAAAAAAAAAAAAAAqNRf/vKX5s9//vPaLwMAqvWb3/ym
+eAHP9jo1vXf/va3a78cAKjGP//5z+btt99uPve5zx1jrB8f/ehHm8ePH6/9
8gCgaH//+9+bN954o/n4xz9+E18/8YlPHP8Zxt0333xz7ZcKAMV5//33m+9/
//vNRz7ykZt4+pWvfOW4hn3xxReP//773//+uNb111955ZXmH//4x9ovHQCy
p/ipmBnmCb773e8277333vHrT548Of63T33qU3e+x+texWHFaQDA8955553m
3r17N/FV69mHDx82f/3rX+88T/9NX1deIaTn+fsVd8nhAsA17Xc9evToTt5V
61XlXvtyAfq6nud1bvvP0xqYHC4AXO93KQ6G+12Kt7/+9a+P8bLPu+++e5Mn
OIUcLoAt03V+335XDH2vvuett946+1xyuAC2pm+/S/tcsbTedYxu53D7kMMF
sAXa77p///6d/a7XX389Ola2/yyvg4cghwugRmP2u2J8/etfP/5Z+rPHIIcL
oAbe73KdgPe7FBtP7XfF/tlaE+sxJUaSwwVQKuUDlBcI97uUN5gzN6p47Rzv
VORwAZRE+1rt/S79+5D9rljO+c4VF8nhAsid4t1c+10x9Od6DTo1F9FGDhdA
Trr2uxT7tB5ULjUl/R36+xTPUyCHC2BtWuel2u+KFfb0SoUcLoA19O13qcZ1
Se7ppfieGjlcAEtRbAvjjfOYKdeUp/T19EqJHC6AVHTNrPuxwv0u9R5Itd8V
y7mLpXOo5HABzEXXzOqrtcZ+Vwz39FIedQ3kcAFM0bffpWvnpfa7Ygzp6ZUK
OVwAQ2mdpvxnuN+lddvS+10xwp5eOayxFe/J4QI4RfMLctrviqHcxpieXikp
h0AOF0Bb335XCTHCPb0Uc3Oi353rfcnhAtvl/S7HA8cE1UzlcC0eQ6/T54Yc
r9X1msI+EORwge3Q8a+cYtd+V47x6hTXt87R0ysl3ztMDheoX99+V27X3kPM
3dMrJXK4QN203+WaKD+U48x5vyuGYlWqnl6ptHO4pb8HwDhXzWF30ewOV5FP
PzS7i10T+/Slqb4/3O/So5T9rhipe3ql0s7hKg8CbMuQWHv93IsMY23Xfpdy
B6Xsd8XyPWylrg3DHK7yzaWszYHp4mPt1WHX7Pb7bNa1Xftd+v8l7nfFWLKn
V0phDle587V7SgDLiIy1yh3sDs1VBjkE73f5eK1hvyuG8gZL9/RKhRwuticm
1uo5z+LrirG2b79LOdra6Vp7rZ5eqZDDxbacj7XH3IG/vkKsVSz1fVLhfpdi
71as3dMrJXK42IYzsda5g/DfF4q1ygm4Z1/N+10x3K9hzZ5eKZHDRf1Ox1qt
acP1ZPjYX87/anRdqWvJ9n6XYkyN+10xcuvplQo5XNQtj/paxZD2fpeOu9r3
u2K4p5fyKLUjh4t6uWa249G1cJ051nbtd+lehC3sd8XKtadXSuRwgXno+nDr
+10xwp5eW4s35HCB8dr7XYohyh1wHHUrpadXKuRwgXje7wpnJG59vyuWe3pt
OaeyXA43Zu/istnfybXtmwRbxMAguv7VPU5d+11bux4ewz29dF7i97VEDvdc
rL2Os+HXr+t0iLdYh2JE135XCf1Wc1JqT6+U0uZwz8Tay31HXFX8zaM/CLaj
a79L6w/2u8ZxzkU9Z3ArXQ53YP3j8VvW7w+C7dBM7/Z+l9Zi7HeNV0tPr1TS
5HCHxtpn9ZIpbuoBnlGurGu/S9e97HdN555ezEU8bd4c7ohezsRZJNK136V4
y37XfGrs6ZXSfDncAf1FLwbmGoBI3u8KZySy35WGfqf6/areC3HmyeFGxNrj
/hj5WcxPn9kwL+ZrNfZr0nFPL3oBDDM9hxvR8444i5mx37UOxYst9PRKaXwO
93RvkKV73qFe+kw+evSoc7+L434ZW+rplZLyMD5n0UsBuVAcVTxt73cp7rLf
tSzPW99ST69UVNftdQO9FLAmnevb+13aj2G/ax1b7umVinIyPn+RA8fSuva7
9O/sd61LvXi23NMrJfWSox8ulqL9LveN8vpJ61pyWXnwXuSWe3qlpM8/OVyk
0rXfpdwV+115oafXMsjhYm7e7wpnJLLflS/di0dPr2W0c7g6JoChdF2k47W9
36XrJ+SLnl7LC3O4OmZYgyCGjtGu/S6ukfKn94ieXusIc7hak5BXQx/VZ7Hf
VTZ6eq0rzOEq58a1Baxvv0s5P87LZdF76XtIOD+uJ8zhar1CDnfb9Hno2u9S
fTa5pjLR0ysv5HC3rWu/S/WB7HeVzz29WEflgxzu9ihv5GOR/a76uKeXHhzP
eSGHuw26rgzr//TQfhc9+utCT6+8kcOtk/JCOvbY79oOH8fkgvJGDrcOp/a7
mJFYL3p6lYUcbrm036XzZXu/i76l2+CeXsoNoQzkcMui96u936V8HftdSxo+
m/r5GSd356UMnalKT68ykcPNX99+l2IvlhYba2/j6d1Y++y/3/zHy2Y/IN6G
Pb1QJnK4efF+l2cpe79L7xP5njWdj7U3c/x2+2bfXtd2zVPVLOvdoYmJtu7p
pc8BykUOd326zlA+Ltzv0v9nvysXMbH20FwGz70Ta7vi6jH+7puYcar+XJDv
Kx853HWw31WKafna45q3M9a21rod3NNL1zqoAznc5ejcptxre7+LfY9crRdr
/Tmhp1d9yOGmo1jKfleJJtYhjMwh0NOrfuRw59W338XxU4qJsbYrrkbsjek4
pKdX/cjhTtO336X/xn5XaabW146r+fLcDPJ59SOHO5z3u3zt530N9rtKdvc+
hDuP525amOdeBnp6bRM53PO69rt0nmK/C2NoXUNPr20ih9tNsVTHQxhjdU8t
+12Ygp5e20YO95ZyAr5H3TkW9rswB32G6OkF5ZE8h3VrOVz97LqXi/0upERP
L5jOtZ6bvIUcrvIlfftdNf/cWIfrA8n1w7SmrTmH27ffpR5cQAr6zNHTC12U
s/U1dS053AcPHjQf/vCH2e/C4ujphVO0nq0phxvmCj72sY81v/zlL8kVYBFe
t3BeR5+acrh//OMfmw984AN31rXcV4vU6OmFIcIcrnKbpe7P+/7Ib3zjG8/1
i9HXmEGDuXlvQHUIQIwwh6t63BKvh/QzOAet9bnmkOhYCHvNUouAudDTC2O1
c7gl3v/iexXC/HNfTxntadRWh4HluKeXrqGAodo53NL2Vv35V8zt+7rPJ2G9
Qg21GFgWPb0wh1JzuDpXeP16qq5csbVdh6sYTG8vxAh7epVybCBfpeZwNXvE
+2HnKIeg53fdw0t+AX3c0yvmMwbEKDGHq9fsNXnsnoVnj7d70zDvBl3o6YUU
SszhKgc79rWqNszfH97ny3EFcU8v1SBQz4IUSsrh+h71KceDjinVKoT3pCmX
or5hOf/sSIueXlhCSTlc5wMUG6dQrNZ5Jpz1qHOO1vqq4cW2+HPAvTFIrZQc
7rn6rzFU2+BaHz8044FeetsQ3i+DUnXMojszH3lNJeRwY+u/xlB+QT9/O7+g
9S85vHp5jp9ySyjR9Tzk9nzPy72O4V0TNXZ5JbnncIfUf43huQ+eM0TPm7rR
06tkp+fYXx12Wa9vJecc7pj6r7HUj7w9M5KeN/XQtRE9vQp2dWh2p9au574+
74t5Gvef/l2H/bNYEf/35pzD9f1hS+U56HlTJ3p6Fe5ScW3fXPY/4Zhf2Pc/
YUbPcsYj19G55nDnqP8ag5439dDnZqnrIySSYazty2fEyjGH6zX31Pqvseh5
UzZ6elUguxzCPHE9txyucqk55Nq6Zk/S8yZ/zsPT06tsx3qDngC37N7YfLFW
csrhhvVfOczUpedNOby/Sk+vGuRS8zVvrJWccri+tzK33kz0vMkbPb3qcx1b
17yXYf5YaznkcMP6rxzvrVXehZ43+fG1Ge8D5pMu1koOOdyl67/GoOdNPujp
hVKtncN1/Zf+7tyPHffUpefNenzfoX7nQGkUQ8K9+KXXmGvXf41Bz5t10NNr
28KeJ1rnKMdX4t61Yl2Yl1zq+jiX+q8x6HmzHPf00u8X26J4GtYIhQ8deyXW
xWu94LixVA43t/qvMXReUnyl50069PTarnZfk/ZD67QS1zaKDa55WiqH6zV1
DXU89LxJw+djcuPbojXtqTjrR6nrNJ0jwnqn1Dnc3Ou/xtDPofwCPW+mc0+v
OfvMowzOMZ57vPbaa8f1TKmPBw8e3Pwsn/3sZ5vLy3SNIHyPRc71X2O4502Y
X6DnzTD09NquX/3qV1GxtrbHCy+8kGzPrKT6r7HoeTNc2NOLc1PdFAN03af1
lufQxz6+9KUvHb+n5McXv/jFm5/n85//fNLftX+/JdV/jeGeN2F+gZ433ejp
VSftC+m91fWd3tvwWAgfuh4Ma9q7HtofKZ3yZP4d/PznP0/+9zk3s5W6Hnre
nOd9Rs5D5dJnWce2PuuKq2GNZPjQZ1/vt56n2ONjoL1/FD60Rin9WNHay3FW
a7CllF7/NRY9b55HT6/y6H1SnFS8VNw8VReruKvn6ViPqY3Un/vyyy8fv1/H
Sg09NbWH7nOPzidLcv1XDdcFY9Dz5pY/C0t/BhFH603toSteqq4x3P8NHzpX
6jOsfIE+x1NqjRST9XfWULeun8G/M8W7pfepwvqvra/ptt7zxvuIW7vGyZVi
nD5/OvedyqEqrmp/S9dqWz6GT9Ex7DirNfpa9QC11n+NsdWeN/rZfK1Za11K
znR9pWt05bHC3FZXvlSfRT2Xepo4irP+neqfa66dwvqvrazhYmhdsZWeN/T0
Wo5rrfS7btckhg/FBcVerW25D3IcrRu836t1bQ65EL+e2uu/xtD7ozV/zT1v
fH3FMT0vXS8oZ3quhlXXUcoVqCZG70Etn6u1Oa7p2M0hzsrW6r/GqLXnDT29
5qHPQFhrdaqGVddLep7ias7XknF7Y0NmkKedyRDy/Y86RnPLYzuGsDdynvII
tfS8cb6enl7xtJca1loNrWEthXNL+me/2Fh7/Tz9ealjrT7LzovmmPPbev3X
GKX3vAl7bNa89zeF1p1hrdWcNay5myvWHmei6/e02zf7xOtaz7HVI8c4K/pM
Uf81Tqk9b+jpdZdrWPVeKn+6RA1rzuaLtYfmMnhuqlirNY7fo9zvfXSPaOq/
xtOx194HybXnje/j2GpPL9ewnqu12moN67w5hNvnpoi1YT/IEj7PYf1Xzuux
EuTe82ZrPb1cw3qu1ooa1lulxNqwl8zp15oX6r/mpTim82xuPW98vVVjT6/Y
foHUsJ7mPPXp3826sVbvtfcml+wlMwevxRUPMC8d/+Gaas2eN7X09IrtF0gN
ayrrxVq9946zpc70ov4rrbV73niuVGn3Csb2CyyphrV868TatXvJzMX1XzVe
X+bEPW/C/MISPW9K6OkV2y+w9BrW8t3WzT73eC6ozhNr9dlwz5K1exxMFe6b
bGnfdS1L97xxHiOX+sPYfoE11rBiGH1WXDOi46XkOGuu/6IfybJS97xxTy+t
B9e67orpF7iVGlbEy7GXzBx8TFL/tY5UPW+W7ukV2y9wqzWsOYur+VqO9zh0
TNR27vX6ivqv9Siuztnzxn9OitrR2H6B1LCWIadYm3MvmTlQ/5WXqT1v5uzp
FdsvkBrWcuUSa/06cu0lMxfn06j/yofWs2N63rin19BjJ7ZfIDWsdckh1rpm
ZgsxiPqvfGkPVu9PTM+b2J5esf0CqWGt39qxtqReMnOg/qsM53reuKeXcqUW
2y+QGtY8uHd3+9F1/eD3tv3oe++6nvvgwYPVYm2pPQ6mcv1Xafcbb5HWrF09
b1566aXj///yl7/cfPWrXz3bh/UnP/lJ853vfOf4T33W/eg734bP8aPvmk9r
8fZz+9Ytykfo9bQfXXR8dj23K77o5+h6bl8+sOt31Xc8dNUH971m7/m0H13C
dV746NojVazsem7f77nruT6/Lp1n19/nz+/WethT/1Werp43fY8f/ehHz9Ww
znGs1h6Llv75Up5Lup67Rm/CknvJzMX1XyX0hsRdv/jFL26O4U9/+tPHPayX
X3755LGq+NS1Vl16Xav433V920U/R6prbKSnz5zXBlueD+N835r3G2E8nytV
0wrkRue4GnrJzMX3/dRee1EjxVi9d6X2nkO9dI3h2FJ6L5m5uP4r3MtGGXR9
5pz71tcMyIc+i77HUOta4uw1/V6ct6b+qzxeO9R87w3KUWsvmblQ/1Uu1c/o
vWN2J3JQe4+DqcJrUfZsy+I6pzn6IQBTeM2mOEKc7Uf9V7mcA6qtJx3KsZVe
MnOg/qtcvm7jPBmKmZl1d9ZL3HwttLkeRo+l5uuVjvqvMtU8q3y8c7H2WZy9
GZR12eyJt4Mptp67P68cEefnq0Oza98TuDs0Qz81rv9SzEU5VFPj6zfqa+zM
cXM8ZnbNnS9f7kcdN1tVXy+ZiFirz8gMQ4PDHn3ktsvifmBcw9mZ46Yrrh7j
776ZYfx29dRrznG2nhqY87H2cj/PfHbxXmLOs6/xPO9NULdnp4+bq8OuJ9a2
1rp4Tr29ZGLyTrtmt5uWPzDVfFH/VR59/r23CSHWpqD60LDHQV3OxdqOnL4+
MxPireu/6sjBbEfKGY/lIYcwN+0F+DOmnFV99UoxtStt1/F3bF7B9fHUf5Vl
7OyxOsXsjbXiKntjvbbRS2ZMrL3+nik5XP9e2Wsph2ckU0ci1HzNRest771q
XVtvbjHiWui56x59bqblnVyfzHFbjnCOXL3HQ6y79yncedzEV+5liLGdXjJx
5+c7a9gZroWo/yqTj4vy68qRg231kok5P19f/8xRhxCi/qs8vh+F/uGYyj3k
dK3Efmta1H+Vxz3btA5hXxNj0UtmedR/lUdzHvWeLT2XGnUIZxezN74cXTtQ
/1UW+odjLNeyMDN0HdR/lcX10VrfArHq6yVTHl9TUP9VhnCGXN01OphL2ONA
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
Oraa9/uAc9bK2Z7S7m2jeQVb68eiNb1rv0rOY4e9ZOjNiy1bO2d7itZDW56B
5ntBSl3b6zqFXjLArRxytn0U/7Ueave20V597RRj5+jHtga9P37Pttq3DGjL
KWfbp6u3Te0z0Obsx7YkvW5fj2jPE8C1HHO2fRRbvUfvOKQYXGudmK85Stm7
1/tALxmgW8452z66Rm3PQKuxt43OI6X0dKWXDHBezjnbU/R6wzoxralqqivS
z1dC//CwxwG9ZIB+JeRsT1EeRLVhYW+bUq67z/EeU877gb7G0Dmh5Bo1ILWS
cranaO++tt42ufcPp5cMEK/EnG2frt42Jc9A8/2tOZ4HnU+mlwwQr9ScbR+d
P5QbCevE9O+l1YmF58Gc8qDu/ajXVctnBlhC6TnbPn29bXKKW+d4/y+XmRZe
a5dUjwbkopacbR9d43qvPJyBVgL3I8yhf7g/J/SSAcapKWd7iq53w9422jvP
vbeNzhM+P6yJXjLAPGrL2Z7S7m2T+ww0v9a1+mwr3nu/sbY8E7C0WnO2fdzb
JqwTU54hxz1111at8d4o5+04m0MeAyidc3G6x3JLlD9RDMu5t81a7w29ZID5
OWerR0n79HPp6m2Tywy0sH/4UucA/dy+H49eMsC8nLPNfb8oJa3l2r1tVE+6
dqxxHcUS+//6Wf1Z0D/X/tmB2jhnW0JvqdS0D9WegbZmnZNyy0v0Dw97yWhd
m8O6HqhNeXMFr5rD7qLZHa5OPOey2T+Ll8fH/nLQ39DubbPWDDT3D9c6O+U6
0/d+0EsGSCfMC5axnjkXa6+/fhtf2/8eT2vadm+bpWuwHPNT1ae53kHxnDgL
pOXr5jJytmdi7eX+6c+yb+5E1qtDs7vYNSeXwj10LlLudq0ZaClzPL4/jV4y
wDJ8zJWRsz0da68Ou+Zid2jufvU6pzBiaXujq7eNahhS1wi4f7jWt3NyLlg/
Dz0OgGX4eC4jZzt2XTst1ppiq6+7HatS9rbRutpr6rmu8eklA6yjrJztuXzt
s32xILBe7q/jyhyx1tq9bVLOQPPe1Rw9CcIeB/SSAZZXTs52eB3C/vL6e+aM
tdbV22buXohz9Q/Xa3WczXXuA1C7cnK2MbG2/S3KIbTyCjPTOSpVbxvlLab2
ZAt7yWi+AoB1lJOzPRNrn6s5GBGbJ2j3tplrBpr6Ioy97lCe16+JXjLAusrJ
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
    "], {{0, 357.75}, {260.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "Creation Time" -> 
        DateObject[{2021, 12, 14, 15, 19, 55.}, "Instant", "Gregorian", 1.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{260.25, 357.75},
  PlotRange->{{0, 260.25}, {0, 357.75}}]], "Text",
 CellChangeTimes->{
  3.8484806176623774`*^9},ExpressionUUID->"0fba46d7-fdb5-40f1-b296-\
27e4cbc3260f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", "15"}], ",", 
       RowBox[{"l0", "=", "38"}], ",", 
       RowBox[{"l1", "=", "7.8"}], ",", 
       RowBox[{"l2", "=", "50"}], ",", 
       RowBox[{"l3", "=", "61.9"}], ",", 
       RowBox[{"l4", "=", "55.8"}], ",", 
       RowBox[{"l5", "=", "39.4"}], ",", 
       RowBox[{"l6", "=", "39.3"}], ",", 
       RowBox[{"l7", "=", "65.7"}], ",", 
       RowBox[{"l8", "=", "49"}], ",", 
       RowBox[{"l9", "=", "36.7"}], ",", 
       RowBox[{"l10", "=", "41.5"}], ",", 
       RowBox[{"l11", "=", "40.1"}]}], "}"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"FindLines", "[", 
           RowBox[{
           "\[Theta]", ",", "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", 
            ",", "l4", ",", "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", 
            ",", "l10", ",", "l11"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "150"}], ",", "150"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "120"}], ",", "70"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "800"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8490081727133913`*^9, 3.849008189890493*^9}, {
  3.849008222533315*^9, 3.8490083518158283`*^9}, {3.849008383503177*^9, 
  3.849008418057821*^9}, {3.8490085099466047`*^9, 3.849008510459237*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"74c16174-828a-443b-9d4c-aeced11a6aa1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.7037167544041136, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}}, Typeset`size$$ = {
    560., {176., 178.66666666666663`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`r = 15, $CellContext`l0 = 38, $CellContext`l1 = 
         7.8, $CellContext`l2 = 50, $CellContext`l3 = 61.9, $CellContext`l4 = 
         55.8, $CellContext`l5 = 39.4, $CellContext`l6 = 
         39.3, $CellContext`l7 = 65.7, $CellContext`l8 = 49, $CellContext`l9 = 
         36.7, $CellContext`l10 = 41.5, $CellContext`l11 = 40.1}, 
        Graphics[{Thick, 
          Line[
           $CellContext`FindLines[$CellContext`\[Theta]$$, $CellContext`r, \
$CellContext`l0, $CellContext`l1, $CellContext`l2, $CellContext`l3, \
$CellContext`l4, $CellContext`l5, $CellContext`l6, $CellContext`l7, \
$CellContext`l8, $CellContext`l9, $CellContext`l10, $CellContext`l11]]}, 
         PlotRange -> {{-150, 150}, {-120, 70}}, ImageSize -> 800]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{861., {198., 202.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8490083539650717`*^9, 3.8490083880709395`*^9, 
  3.8490084185335765`*^9, 3.8490085113748164`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7a2709da-698b-4c9d-9822-0808d6335ccb"]
}, Open  ]],

Cell["\<\
Function that create the trajectories of each node depending on the length of \
the links\
\>", "Text",
 CellChangeTimes->{{3.847632575682004*^9, 
  3.8476326167195125`*^9}},ExpressionUUID->"178f7bee-0d41-4f9c-971b-\
57ba3cbf96f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trajectory", "[", 
   RowBox[{
   "r_", ",", "l0_", ",", "l1_", ",", "l2_", ",", "l3_", ",", "l4_", ",", 
    "l5_", ",", "l6_", ",", "l7_", ",", "l8_", ",", "l9_", ",", "l10_", ",", 
    "l11_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"FindPoints", "[", 
        RowBox[{
        "#", ",", "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", ",", "l4", 
         ",", "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", ",", "l10", 
         ",", "l11"}], "]"}], ")"}], "&"}], "/@", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "Pi"}], ",", "100"}], "]"}]}], ")"}], 
   "\[Transpose]"}]}]], "Input",
 CellChangeTimes->{{3.8476318833436694`*^9, 3.847631960232532*^9}, {
   3.8476319934584484`*^9, 3.8476320617779055`*^9}, {3.847632285210882*^9, 
   3.847632288336686*^9}, 3.847632443418333*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"56440ece-056d-4c07-a36d-482465d38f05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", "15"}], ",", 
       RowBox[{"l0", "=", "38"}], ",", 
       RowBox[{"l1", "=", "7.8"}], ",", 
       RowBox[{"l2", "=", "50"}], ",", 
       RowBox[{"l3", "=", "61.9"}], ",", 
       RowBox[{"l4", "=", "55.8"}], ",", 
       RowBox[{"l5", "=", "39.4"}], ",", 
       RowBox[{"l6", "=", "39.3"}], ",", 
       RowBox[{"l7", "=", "65.7"}], ",", 
       RowBox[{"l8", "=", "49"}], ",", 
       RowBox[{"l9", "=", "36.7"}], ",", 
       RowBox[{"l10", "=", "41.5"}], ",", 
       RowBox[{"l11", "=", "40.1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Arrow", ",", 
           RowBox[{"trajectory", "[", 
            RowBox[{
            "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", ",", "l4", ",", 
             "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", ",", "l10", 
             ",", "l11"}], "]"}]}], "]"}], ",", "Thick", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"FindLines", "[", 
           RowBox[{
           "\[Theta]", ",", "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", 
            ",", "l4", ",", "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", 
            ",", "l10", ",", "l11"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "150"}], ",", "150"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "120"}], ",", "70"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "800"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8474730798651595`*^9, {3.847475160449356*^9, 3.8474752569566603`*^9}, 
   3.847475304059347*^9, {3.8476241155918617`*^9, 3.847624116659902*^9}, {
   3.847624203038178*^9, 3.847624212358489*^9}, {3.847625733262205*^9, 
   3.847625734933526*^9}, {3.8476310622764397`*^9, 3.8476311182317305`*^9}, {
   3.847631209380951*^9, 3.847631246090717*^9}, {3.847631283369693*^9, 
   3.847631357529359*^9}, {3.847631391865984*^9, 3.8476314150136976`*^9}, {
   3.8476314984972286`*^9, 3.8476315182038355`*^9}, {3.847631737012672*^9, 
   3.8476317407987957`*^9}, {3.84763182265283*^9, 3.847631874569685*^9}, {
   3.8476320160620146`*^9, 3.8476320177548738`*^9}, {3.8476320848992558`*^9, 
   3.8476321084847116`*^9}, 3.8476321641791935`*^9, {3.8476322073334355`*^9, 
   3.847632240304584*^9}, {3.847632298128385*^9, 3.8476323136849403`*^9}, 
   3.8476324463542647`*^9, {3.8476324925669255`*^9, 3.8476325139560547`*^9}, 
   3.8476325580597963`*^9, {3.8484793424424872`*^9, 3.84847935599621*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8999160b-01b3-473d-8b19-9c59fbbb813b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}}, Typeset`size$$ = {
    560., {176., 178.66666666666663`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`r = 15, $CellContext`l0 = 38, $CellContext`l1 = 
         7.8, $CellContext`l2 = 50, $CellContext`l3 = 61.9, $CellContext`l4 = 
         55.8, $CellContext`l5 = 39.4, $CellContext`l6 = 
         39.3, $CellContext`l7 = 65.7, $CellContext`l8 = 49, $CellContext`l9 = 
         36.7, $CellContext`l10 = 41.5, $CellContext`l11 = 40.1}, 
        Graphics[{
          Arrowheads[Large], 
          Map[Arrow, 
           $CellContext`trajectory[$CellContext`r, $CellContext`l0, \
$CellContext`l1, $CellContext`l2, $CellContext`l3, $CellContext`l4, \
$CellContext`l5, $CellContext`l6, $CellContext`l7, $CellContext`l8, \
$CellContext`l9, $CellContext`l10, $CellContext`l11]], Thick, Red, 
          Line[
           $CellContext`FindLines[$CellContext`\[Theta]$$, $CellContext`r, \
$CellContext`l0, $CellContext`l1, $CellContext`l2, $CellContext`l3, \
$CellContext`l4, $CellContext`l5, $CellContext`l6, $CellContext`l7, \
$CellContext`l8, $CellContext`l9, $CellContext`l10, $CellContext`l11]]}, 
         PlotRange -> {{-150, 150}, {-120, 70}}, ImageSize -> 800]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{861., {198., 202.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.848477444035143*^9, 3.8484774903420644`*^9, {3.8484793440661173`*^9, 
   3.8484793568439364`*^9}, 3.8490077150852046`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b203d96c-1af1-44c2-9435-472fb14abf93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trajectoriesdata", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"FindPoints", "/@", 
      RowBox[{"Subdivide", "[", 
       RowBox[{"0", ",", 
        RowBox[{"2", " ", "Pi"}], ",", "100"}], "]"}]}], ")"}], 
    "\[Transpose]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", "15"}], ",", 
       RowBox[{"l0", "=", "38"}], ",", 
       RowBox[{"l1", "=", "r"}], ",", 
       RowBox[{"l2", "=", "50"}], ",", 
       RowBox[{"l3", "=", "61.9"}], ",", 
       RowBox[{"l4", "=", "55.8"}], ",", 
       RowBox[{"l5", "=", "39.4"}], ",", 
       RowBox[{"l6", "=", "39.3"}], ",", 
       RowBox[{"l7", "=", "65.7"}], ",", 
       RowBox[{"l8", "=", "49"}], ",", 
       RowBox[{"l9", "=", "36.7"}], ",", 
       RowBox[{"l10", "=", "41.5"}], ",", 
       RowBox[{"l11", "=", "40.1"}]}], "}"}], ","}]}], "*)"}], 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Arrow", ",", 
          RowBox[{"trajectory", "[", 
           RowBox[{
           "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", ",", "l4", ",", 
            "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", ",", "l10", ",",
             "l11"}], "]"}]}], "]"}], ",", "Thick", ",", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"FindLines", "[", 
          RowBox[{
          "\[Theta]", ",", "r", ",", "l0", ",", "l1", ",", "l2", ",", "l3", 
           ",", "l4", ",", "l5", ",", "l6", ",", "l7", ",", "l8", ",", "l9", 
           ",", "l10", ",", "l11"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "150"}], ",", "150"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "120"}], ",", "70"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "800"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", "15"}], "}"}], ",", "10", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l0", ",", "38"}], "}"}], ",", "35", ",", "40"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1", ",", "7.8"}], "}"}], ",", "3", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l2", ",", "50"}], "}"}], ",", "45", ",", "55"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l3", ",", "61.9"}], "}"}], ",", "60", ",", "65"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l4", ",", "55.8"}], "}"}], ",", "50", ",", "60"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l5", ",", "39.4"}], "}"}], ",", "35", ",", "40"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l6", ",", "39.3"}], "}"}], ",", "35", ",", "40"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l7", ",", "65.7"}], "}"}], ",", "60", ",", "70"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l8", ",", "49"}], "}"}], ",", "45", ",", "52"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l9", ",", "36.7"}], "}"}], ",", "35", ",", "40"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l10", ",", "41.5"}], "}"}], ",", "40", ",", "45"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l11", ",", "40.1"}], "}"}], ",", "35", ",", "45"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8474713718720007`*^9, 3.8474713929093337`*^9}, {
   3.847471452145298*^9, 3.847471477350621*^9}, {3.8474715353420544`*^9, 
   3.8474716225441732`*^9}, {3.847471663633979*^9, 3.8474717146371107`*^9}, {
   3.847471826667367*^9, 3.8474719618704386`*^9}, {3.847472036657724*^9, 
   3.84747237726775*^9}, 3.847475174361512*^9, 3.847475332386516*^9, {
   3.8476256788611393`*^9, 3.8476256820351057`*^9}, {3.8476257120628033`*^9, 
   3.847625712343879*^9}, {3.847625749154853*^9, 3.8476257739424405`*^9}, {
   3.8476258208936973`*^9, 3.8476258398747263`*^9}, {3.8476400229634256`*^9, 
   3.847640029974512*^9}, {3.848479578567869*^9, 3.8484795941033134`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d6cca4ca-6106-4519-880f-5405645a104e"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"FindPoints\\\", \\\"[\\\", \\\"0\\\", \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", FractionBox[\\\"\[Pi]\\\", \
\\\"50\\\"], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[\\\"\[Pi]\\\", \\\"25\\\"], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"FindPoints\\\", \\\"[\\\", FractionBox[RowBox[{\\\"3\\\", \\\" \\\
\", \\\"\[Pi]\\\"}], \\\"50\\\"], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"FindPoints\\\", \\\"[\\\", FractionBox[RowBox[{\\\"2\\\", \\\" \\\
\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"FindPoints\\\", \\\"[\\\", FractionBox[\\\"\[Pi]\\\", \
\\\"10\\\"], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"3\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"7\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"4\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"9\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", FractionBox[\\\"\
\[Pi]\\\", \\\"5\\\"], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\
\"[\\\", FractionBox[RowBox[{\\\"11\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\
\"], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"6\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"13\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"7\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"3\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"10\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"8\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"17\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"9\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"19\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"5\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"21\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"11\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"23\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"12\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", FractionBox[\\\
\"\[Pi]\\\", \\\"2\\\"], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \
\\\"[\\\", FractionBox[RowBox[{\\\"13\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\
\\\"], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"27\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"14\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"29\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"3\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"5\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"31\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"16\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"33\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"17\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"7\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"10\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"18\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"37\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"19\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"39\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"4\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"5\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"41\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"21\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"43\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"22\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"9\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"10\\\"], \\\"]\
\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"23\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"47\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"24\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"25\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"FindPoints\\\", \\\"[\\\", \
FractionBox[RowBox[{\\\"49\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"50\\\"], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"51\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 8, 1, 
   26473253099477533379, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8484774449828625`*^9, 3.8484774912400417`*^9, 
  3.848479595084727*^9, 3.849007716197231*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"9b7b2e21-6b3c-4a61-a7b2-788b4b83ec5e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l0$$ = 38, $CellContext`l1$$ = 
    7.8, $CellContext`l10$$ = 41.5, $CellContext`l11$$ = 
    40.1, $CellContext`l2$$ = 50, $CellContext`l3$$ = 
    61.9, $CellContext`l4$$ = 55.8, $CellContext`l5$$ = 
    39.4, $CellContext`l6$$ = 39.3, $CellContext`l7$$ = 
    65.7, $CellContext`l8$$ = 49, $CellContext`l9$$ = 36.7, $CellContext`r$$ =
     15, $CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}, {{
       Hold[$CellContext`r$$], 15}, 10, 20}, {{
       Hold[$CellContext`l0$$], 38}, 35, 40}, {{
       Hold[$CellContext`l1$$], 7.8}, 3, 12}, {{
       Hold[$CellContext`l2$$], 50}, 45, 55}, {{
       Hold[$CellContext`l3$$], 61.9}, 60, 65}, {{
       Hold[$CellContext`l4$$], 55.8}, 50, 60}, {{
       Hold[$CellContext`l5$$], 39.4}, 35, 40}, {{
       Hold[$CellContext`l6$$], 39.3}, 35, 40}, {{
       Hold[$CellContext`l7$$], 65.7}, 60, 70}, {{
       Hold[$CellContext`l8$$], 49}, 45, 52}, {{
       Hold[$CellContext`l9$$], 36.7}, 35, 40}, {{
       Hold[$CellContext`l10$$], 41.5}, 40, 45}, {{
       Hold[$CellContext`l11$$], 40.1}, 35, 45}}, Typeset`size$$ = {
    560., {176., 178.66666666666663`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l0$$ = 38, $CellContext`l1$$ = 
        7.8, $CellContext`l10$$ = 41.5, $CellContext`l11$$ = 
        40.1, $CellContext`l2$$ = 50, $CellContext`l3$$ = 
        61.9, $CellContext`l4$$ = 55.8, $CellContext`l5$$ = 
        39.4, $CellContext`l6$$ = 39.3, $CellContext`l7$$ = 
        65.7, $CellContext`l8$$ = 49, $CellContext`l9$$ = 
        36.7, $CellContext`r$$ = 15, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         Arrowheads[Large], 
         Map[Arrow, 
          $CellContext`trajectory[$CellContext`r$$, $CellContext`l0$$, \
$CellContext`l1$$, $CellContext`l2$$, $CellContext`l3$$, $CellContext`l4$$, \
$CellContext`l5$$, $CellContext`l6$$, $CellContext`l7$$, $CellContext`l8$$, \
$CellContext`l9$$, $CellContext`l10$$, $CellContext`l11$$]], Thick, Red, 
         Line[
          $CellContext`FindLines[$CellContext`\[Theta]$$, $CellContext`r$$, \
$CellContext`l0$$, $CellContext`l1$$, $CellContext`l2$$, $CellContext`l3$$, \
$CellContext`l4$$, $CellContext`l5$$, $CellContext`l6$$, $CellContext`l7$$, \
$CellContext`l8$$, $CellContext`l9$$, $CellContext`l10$$, \
$CellContext`l11$$]]}, PlotRange -> {{-150, 150}, {-120, 70}}, ImageSize -> 
        800], "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 
         Pi}, {{$CellContext`r$$, 15}, 10, 20}, {{$CellContext`l0$$, 38}, 35, 
         40}, {{$CellContext`l1$$, 7.8}, 3, 12}, {{$CellContext`l2$$, 50}, 45,
          55}, {{$CellContext`l3$$, 61.9}, 60, 
         65}, {{$CellContext`l4$$, 55.8}, 50, 60}, {{$CellContext`l5$$, 39.4},
          35, 40}, {{$CellContext`l6$$, 39.3}, 35, 
         40}, {{$CellContext`l7$$, 65.7}, 60, 70}, {{$CellContext`l8$$, 49}, 
         45, 52}, {{$CellContext`l9$$, 36.7}, 35, 
         40}, {{$CellContext`l10$$, 41.5}, 40, 
         45}, {{$CellContext`l11$$, 40.1}, 35, 45}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{861., {198., 202.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8484774452176065`*^9, 3.848477491309856*^9, 
  3.848479595119629*^9, 3.849007716426617*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"d3feab6b-19f5-4a87-b074-4166f9684f8c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d04bc8ad-69ff-4838-afec-84a73778832a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 68, "Title",ExpressionUUID->"25895f2a-272e-4284-be37-a903045f5591"],
Cell[751, 27, 352, 7, 24, "Text",ExpressionUUID->"678921f5-b1bf-465d-a2ad-cb3c7b5271be"],
Cell[1106, 36, 107196, 1762, 251, "Output",ExpressionUUID->"e6c3b4b3-3ec1-4f41-b137-ab9716354ff1"],
Cell[108305, 1800, 332, 7, 40, "Text",ExpressionUUID->"f125b167-23ee-4f43-9142-de17c9c6baa3"],
Cell[108640, 1809, 153, 2, 24, "Text",ExpressionUUID->"1e297c4f-ee81-4fdc-b125-81cf4c8ca118"],
Cell[108796, 1813, 403, 8, 24, "Text",ExpressionUUID->"ecc56666-2962-4976-b092-e8fc6ec205aa"],
Cell[109202, 1823, 179, 6, 40, "Text",ExpressionUUID->"35d4c75b-3a11-463d-8ae5-14d465137c9d"],
Cell[109384, 1831, 244, 6, 24, "Text",ExpressionUUID->"be0e5748-61b9-40b0-9e45-14bfd022b4eb"],
Cell[109631, 1839, 961, 28, 22, "Text",ExpressionUUID->"cee0bc20-0606-4a99-b0aa-cd9e392325b8"],
Cell[110595, 1869, 215, 4, 24, "Text",ExpressionUUID->"4ecf19ef-a3cf-4432-ae9b-c4beebf8e79d"],
Cell[110813, 1875, 173, 6, 40, "Text",ExpressionUUID->"11cf7a4b-452b-447b-aaef-690d425c4a32"],
Cell[110989, 1883, 429, 8, 24, "Text",ExpressionUUID->"9c1046f0-fdf8-4a74-a677-91b063e84f90"],
Cell[111421, 1893, 256, 6, 24, "Text",ExpressionUUID->"abd7dd1e-f26f-4a6d-9076-20399faa08fb"],
Cell[111680, 1901, 230, 4, 21, "Input",ExpressionUUID->"f1c4550a-1474-4196-abb3-396c37aa7b66"],
Cell[111913, 1907, 5895, 151, 290, "Input",ExpressionUUID->"13efd683-3245-44f9-8ba2-764bc2c303f1"],
Cell[117811, 2060, 320, 7, 24, "Text",ExpressionUUID->"bcc75ed5-a805-4ef1-8c09-bca64cc8196b"],
Cell[118134, 2069, 3764, 105, 158, "Input",ExpressionUUID->"016c874d-c9a9-4857-8171-04bdef394c4c"],
Cell[121901, 2176, 251, 4, 24, "Text",ExpressionUUID->"e2f5907d-49d8-4931-b065-134c63423e89"],
Cell[122155, 2182, 2435, 58, 48, "Input",ExpressionUUID->"24b7c146-444b-481c-a988-0565f7059ee6"],
Cell[124593, 2242, 226, 5, 24, "Text",ExpressionUUID->"591480ff-8ae0-44e4-9054-4d9f24d66ecd"],
Cell[124822, 2249, 2587, 63, 158, "Input",ExpressionUUID->"e6e8e644-a412-4cd2-bfb9-e7d3bff9093c"],
Cell[127412, 2314, 306, 7, 24, "Text",ExpressionUUID->"b42c0631-43b1-4d2c-b832-6318ceabb122"],
Cell[127721, 2323, 14998, 254, 260, "Text",ExpressionUUID->"0fba46d7-fdb5-40f1-b296-27e4cbc3260f"],
Cell[CellGroupData[{
Cell[142744, 2581, 1859, 46, 48, "Input",ExpressionUUID->"74c16174-828a-443b-9d4c-aeced11a6aa1"],
Cell[144606, 2629, 2423, 45, 413, "Output",ExpressionUUID->"7a2709da-698b-4c9d-9822-0808d6335ccb"]
}, Open  ]],
Cell[147044, 2677, 241, 6, 24, "Text",ExpressionUUID->"178f7bee-0d41-4f9c-971b-57ba3cbf96f5"],
Cell[147288, 2685, 1006, 24, 21, "Input",ExpressionUUID->"56440ece-056d-4c07-a36d-482465d38f05"],
Cell[CellGroupData[{
Cell[148319, 2713, 3064, 65, 48, "Input",ExpressionUUID->"8999160b-01b3-473d-8b19-9c59fbbb813b"],
Cell[151386, 2780, 2756, 52, 413, "Output",ExpressionUUID->"b203d96c-1af1-44c2-9435-472fb14abf93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154179, 2837, 4710, 125, 89, "Input",ExpressionUUID->"d6cca4ca-6106-4519-880f-5405645a104e"],
Cell[158892, 2964, 7285, 107, 130, "Message",ExpressionUUID->"9b7b2e21-6b3c-4a61-a7b2-788b4b83ec5e"],
Cell[166180, 3073, 4361, 80, 413, "Output",ExpressionUUID->"d3feab6b-19f5-4a87-b074-4166f9684f8c"]
}, Open  ]]
}, Open  ]]
}
]
*)

